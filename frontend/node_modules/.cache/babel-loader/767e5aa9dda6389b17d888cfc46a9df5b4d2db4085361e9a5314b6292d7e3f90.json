{"ast":null,"code":"import $89yE2$react, { useContext as $89yE2$useContext, useMemo as $89yE2$useMemo, useRef as $89yE2$useRef, useState as $89yE2$useState, useLayoutEffect as $89yE2$useLayoutEffect } from \"react\";\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ /*\r\n    * Copyright 2020 Adobe. All rights reserved.\r\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n    * you may not use this file except in compliance with the License. You may obtain a copy\r\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n    *\r\n    * Unless required by applicable law or agreed to in writing, software distributed under\r\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n    * OF ANY KIND, either express or implied. See the License for the specific language\r\n    * governing permissions and limitations under the License.\r\n    */ // We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst $704cf1d3b684cc5c$var$defaultContext = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\nconst $704cf1d3b684cc5c$var$SSRContext = /*#__PURE__*/(0, $89yE2$react).createContext($704cf1d3b684cc5c$var$defaultContext);\nfunction $704cf1d3b684cc5c$export$9f8ac96af4b1b2ae(props) {\n  let cur = (0, $89yE2$useContext)($704cf1d3b684cc5c$var$SSRContext);\n  let counter = $704cf1d3b684cc5c$var$useCounter(cur === $704cf1d3b684cc5c$var$defaultContext);\n  let value = (0, $89yE2$useMemo)(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === $704cf1d3b684cc5c$var$defaultContext ? \"\" : `${cur.prefix}-${counter}`,\n    current: 0\n  }), [cur, counter]);\n  return /*#__PURE__*/(0, $89yE2$react).createElement($704cf1d3b684cc5c$var$SSRContext.Provider, {\n    value: value\n  }, props.children);\n}\nlet $704cf1d3b684cc5c$var$canUseDOM = Boolean(typeof window !== \"undefined\" && window.document && window.document.createElement);\nlet $704cf1d3b684cc5c$var$componentIds = new WeakMap();\nfunction $704cf1d3b684cc5c$var$useCounter() {\n  let isDisabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let ctx = (0, $89yE2$useContext)($704cf1d3b684cc5c$var$SSRContext);\n  let ref = (0, $89yE2$useRef)(null);\n  if (ref.current === null && !isDisabled) {\n    var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner;\n    // In strict mode, React renders components twice, and the ref will be reset to null on the second render.\n    // This means our id counter will be incremented twice instead of once. This is a problem because on the\n    // server, components are only rendered once and so ids generated on the server won't match the client.\n    // In React 18, useId was introduced to solve this, but it is not available in older versions. So to solve this\n    // we need to use some React internals to access the underlying Fiber instance, which is stable between renders.\n    // This is exposed as ReactCurrentOwner in development, which is all we need since StrictMode only runs in development.\n    // To ensure that we only increment the global counter once, we store the starting id for this component in\n    // a weak map associated with the Fiber. On the second render, we reset the global counter to this value.\n    // Since React runs the second render immediately after the first, this is safe.\n    // @ts-ignore\n    let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = (0, $89yE2$react).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;\n    if (currentOwner) {\n      let prevComponentValue = $704cf1d3b684cc5c$var$componentIds.get(currentOwner);\n      if (prevComponentValue == null)\n        // On the first render, and first call to useId, store the id and state in our weak map.\n        $704cf1d3b684cc5c$var$componentIds.set(currentOwner, {\n          id: ctx.current,\n          state: currentOwner.memoizedState\n        });else if (currentOwner.memoizedState !== prevComponentValue.state) {\n        // On the second render, the memoizedState gets reset by React.\n        // Reset the counter, and remove from the weak map so we don't\n        // do this for subsequent useId calls.\n        ctx.current = prevComponentValue.id;\n        $704cf1d3b684cc5c$var$componentIds.delete(currentOwner);\n      }\n    }\n    ref.current = ++ctx.current;\n  }\n  return ref.current;\n}\nfunction $704cf1d3b684cc5c$export$619500959fc48b26(defaultId) {\n  let ctx = (0, $89yE2$useContext)($704cf1d3b684cc5c$var$SSRContext);\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === $704cf1d3b684cc5c$var$defaultContext && !$704cf1d3b684cc5c$var$canUseDOM) console.warn(\"When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.\");\n  let counter = $704cf1d3b684cc5c$var$useCounter(!!defaultId);\n  return defaultId || `react-aria${ctx.prefix}-${counter}`;\n}\nfunction $704cf1d3b684cc5c$export$535bd6ca7f90a273() {\n  let cur = (0, $89yE2$useContext)($704cf1d3b684cc5c$var$SSRContext);\n  let isInSSRContext = cur !== $704cf1d3b684cc5c$var$defaultContext;\n  let [isSSR, setIsSSR] = (0, $89yE2$useState)(isInSSRContext);\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof window !== \"undefined\" && isInSSRContext)\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    (0, $89yE2$useLayoutEffect)(() => {\n      setIsSSR(false);\n    }, []);\n  return isSSR;\n}\nexport { $704cf1d3b684cc5c$export$9f8ac96af4b1b2ae as SSRProvider, $704cf1d3b684cc5c$export$619500959fc48b26 as useSSRSafeId, $704cf1d3b684cc5c$export$535bd6ca7f90a273 as useIsSSR };","map":{"version":3,"names":["$89yE2$react","useContext","$89yE2$useContext","useMemo","$89yE2$useMemo","useRef","$89yE2$useRef","useState","$89yE2$useState","useLayoutEffect","$89yE2$useLayoutEffect","$704cf1d3b684cc5c$var$defaultContext","prefix","String","Math","round","random","current","$704cf1d3b684cc5c$var$SSRContext","createContext","$704cf1d3b684cc5c$export$9f8ac96af4b1b2ae","props","cur","counter","$704cf1d3b684cc5c$var$useCounter","value","createElement","Provider","children","$704cf1d3b684cc5c$var$canUseDOM","Boolean","window","document","$704cf1d3b684cc5c$var$componentIds","WeakMap","isDisabled","arguments","length","undefined","ctx","ref","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner","currentOwner","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","prevComponentValue","get","set","id","state","memoizedState","delete","$704cf1d3b684cc5c$export$619500959fc48b26","defaultId","console","warn","$704cf1d3b684cc5c$export$535bd6ca7f90a273","isInSSRContext","isSSR","setIsSSR","SSRProvider","useSSRSafeId","useIsSSR"],"sources":["D:/Code/Node JS CODEEE/node_test/NODEJS_ECOM/frontend/node_modules/@react-aria/ssr/dist/import.mjs"],"sourcesContent":["import $89yE2$react, {useContext as $89yE2$useContext, useMemo as $89yE2$useMemo, useRef as $89yE2$useRef, useState as $89yE2$useState, useLayoutEffect as $89yE2$useLayoutEffect} from \"react\";\r\n\r\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ /*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ // We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\r\n// guarded by a check that it only runs on the client side.\r\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\r\n\r\n// Default context value to use in case there is no SSRProvider. This is fine for\r\n// client-only apps. In order to support multiple copies of React Aria potentially\r\n// being on the page at once, the prefix is set to a random number. SSRProvider\r\n// will reset this to zero for consistency between server and client, so in the\r\n// SSR case multiple copies of React Aria is not supported.\r\nconst $704cf1d3b684cc5c$var$defaultContext = {\r\n    prefix: String(Math.round(Math.random() * 10000000000)),\r\n    current: 0\r\n};\r\nconst $704cf1d3b684cc5c$var$SSRContext = /*#__PURE__*/ (0, $89yE2$react).createContext($704cf1d3b684cc5c$var$defaultContext);\r\nfunction $704cf1d3b684cc5c$export$9f8ac96af4b1b2ae(props) {\r\n    let cur = (0, $89yE2$useContext)($704cf1d3b684cc5c$var$SSRContext);\r\n    let counter = $704cf1d3b684cc5c$var$useCounter(cur === $704cf1d3b684cc5c$var$defaultContext);\r\n    let value = (0, $89yE2$useMemo)(()=>({\r\n            // If this is the first SSRProvider, start with an empty string prefix, otherwise\r\n            // append and increment the counter.\r\n            prefix: cur === $704cf1d3b684cc5c$var$defaultContext ? \"\" : `${cur.prefix}-${counter}`,\r\n            current: 0\r\n        }), [\r\n        cur,\r\n        counter\r\n    ]);\r\n    return /*#__PURE__*/ (0, $89yE2$react).createElement($704cf1d3b684cc5c$var$SSRContext.Provider, {\r\n        value: value\r\n    }, props.children);\r\n}\r\nlet $704cf1d3b684cc5c$var$canUseDOM = Boolean(typeof window !== \"undefined\" && window.document && window.document.createElement);\r\nlet $704cf1d3b684cc5c$var$componentIds = new WeakMap();\r\nfunction $704cf1d3b684cc5c$var$useCounter(isDisabled = false) {\r\n    let ctx = (0, $89yE2$useContext)($704cf1d3b684cc5c$var$SSRContext);\r\n    let ref = (0, $89yE2$useRef)(null);\r\n    if (ref.current === null && !isDisabled) {\r\n        var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner;\r\n        // In strict mode, React renders components twice, and the ref will be reset to null on the second render.\r\n        // This means our id counter will be incremented twice instead of once. This is a problem because on the\r\n        // server, components are only rendered once and so ids generated on the server won't match the client.\r\n        // In React 18, useId was introduced to solve this, but it is not available in older versions. So to solve this\r\n        // we need to use some React internals to access the underlying Fiber instance, which is stable between renders.\r\n        // This is exposed as ReactCurrentOwner in development, which is all we need since StrictMode only runs in development.\r\n        // To ensure that we only increment the global counter once, we store the starting id for this component in\r\n        // a weak map associated with the Fiber. On the second render, we reset the global counter to this value.\r\n        // Since React runs the second render immediately after the first, this is safe.\r\n        // @ts-ignore\r\n        let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = (0, $89yE2$react).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;\r\n        if (currentOwner) {\r\n            let prevComponentValue = $704cf1d3b684cc5c$var$componentIds.get(currentOwner);\r\n            if (prevComponentValue == null) // On the first render, and first call to useId, store the id and state in our weak map.\r\n            $704cf1d3b684cc5c$var$componentIds.set(currentOwner, {\r\n                id: ctx.current,\r\n                state: currentOwner.memoizedState\r\n            });\r\n            else if (currentOwner.memoizedState !== prevComponentValue.state) {\r\n                // On the second render, the memoizedState gets reset by React.\r\n                // Reset the counter, and remove from the weak map so we don't\r\n                // do this for subsequent useId calls.\r\n                ctx.current = prevComponentValue.id;\r\n                $704cf1d3b684cc5c$var$componentIds.delete(currentOwner);\r\n            }\r\n        }\r\n        ref.current = ++ctx.current;\r\n    }\r\n    return ref.current;\r\n}\r\nfunction $704cf1d3b684cc5c$export$619500959fc48b26(defaultId) {\r\n    let ctx = (0, $89yE2$useContext)($704cf1d3b684cc5c$var$SSRContext);\r\n    // If we are rendering in a non-DOM environment, and there's no SSRProvider,\r\n    // provide a warning to hint to the developer to add one.\r\n    if (ctx === $704cf1d3b684cc5c$var$defaultContext && !$704cf1d3b684cc5c$var$canUseDOM) console.warn(\"When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.\");\r\n    let counter = $704cf1d3b684cc5c$var$useCounter(!!defaultId);\r\n    return defaultId || `react-aria${ctx.prefix}-${counter}`;\r\n}\r\nfunction $704cf1d3b684cc5c$export$535bd6ca7f90a273() {\r\n    let cur = (0, $89yE2$useContext)($704cf1d3b684cc5c$var$SSRContext);\r\n    let isInSSRContext = cur !== $704cf1d3b684cc5c$var$defaultContext;\r\n    let [isSSR, setIsSSR] = (0, $89yE2$useState)(isInSSRContext);\r\n    // If on the client, and the component was initially server rendered,\r\n    // then schedule a layout effect to update the component after hydration.\r\n    if (typeof window !== \"undefined\" && isInSSRContext) // This if statement technically breaks the rules of hooks, but is safe\r\n    // because the condition never changes after mounting.\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    (0, $89yE2$useLayoutEffect)(()=>{\r\n        setIsSSR(false);\r\n    }, []);\r\n    return isSSR;\r\n}\r\n\r\n\r\n\r\n\r\nexport {$704cf1d3b684cc5c$export$9f8ac96af4b1b2ae as SSRProvider, $704cf1d3b684cc5c$export$619500959fc48b26 as useSSRSafeId, $704cf1d3b684cc5c$export$535bd6ca7f90a273 as useIsSSR};\r\n//# sourceMappingURL=module.js.map\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}